CREATE SEQUENCE IF NOT EXISTS hibernate_sequence START WITH 1 INCREMENT BY 1;

-- AUTHOR
CREATE TABLE author
(
    author_id  BIGINT      NOT NULL,
    first_name VARCHAR(20) NOT NULL,
    last_name  VARCHAR(20) NOT NULL,
    CONSTRAINT pk_author PRIMARY KEY (author_id)
);



-- GENRE
CREATE TABLE genre
(
    genre_id   BIGINT      NOT NULL,
    genre_name VARCHAR(50) NOT NULL,
    CONSTRAINT pk_genre PRIMARY KEY (genre_id)
);

ALTER TABLE genre
    ADD CONSTRAINT uc_genre_genre_name UNIQUE (genre_name);



-- LITERATURE
CREATE TABLE literature
(
    literature_id BIGINT      NOT NULL,
    title         VARCHAR(40) NOT NULL,
    author_id     BIGINT,
    CONSTRAINT pk_literature PRIMARY KEY (literature_id)
);

ALTER TABLE literature
    ADD CONSTRAINT FK_LITERATURE_ON_AUTHOR FOREIGN KEY (author_id) REFERENCES author (author_id);



-- PUBLISHER
CREATE TABLE publisher
(
    publisher_id   BIGINT      NOT NULL,
    publisher_name VARCHAR(50) NOT NULL,
    CONSTRAINT pk_publisher PRIMARY KEY (publisher_id)
);



-- BOOK
CREATE TABLE book
(
    book_id      BIGINT           NOT NULL,
    title        VARCHAR(40)      NOT NULL,
    price        DOUBLE PRECISION NOT NULL,
    amount       INTEGER          NOT NULL,
    image_path   VARCHAR(100)     NOT NULL,
    publisher_id BIGINT,
    CONSTRAINT pk_book PRIMARY KEY (book_id)
);

ALTER TABLE book
    ADD CONSTRAINT FK_BOOK_ON_PUBLISHER FOREIGN KEY (publisher_id) REFERENCES publisher (publisher_id);



-- LITERATURE-BOOK
CREATE TABLE literature_book
(
    book_id       BIGINT NOT NULL,
    literature_id BIGINT NOT NULL,
    CONSTRAINT pk_literature_book PRIMARY KEY (book_id, literature_id)
);

ALTER TABLE literature_book
    ADD CONSTRAINT fk_litboo_on_book FOREIGN KEY (book_id) REFERENCES book (book_id);

ALTER TABLE literature_book
    ADD CONSTRAINT fk_litboo_on_literary_work FOREIGN KEY (literature_id) REFERENCES literature (literature_id);



-- LITERATURE-GENRE
CREATE TABLE literature_genre
(
    genre_id      BIGINT NOT NULL,
    literature_id BIGINT NOT NULL,
    CONSTRAINT pk_literature_genre PRIMARY KEY (genre_id, literature_id)
);

ALTER TABLE literature_genre
    ADD CONSTRAINT fk_litgen_on_genre FOREIGN KEY (genre_id) REFERENCES genre (genre_id);

ALTER TABLE literature_genre
    ADD CONSTRAINT fk_litgen_on_literary_work FOREIGN KEY (literature_id) REFERENCES literature (literature_id);




-- USERS
CREATE TABLE users
(
    user_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    CONSTRAINT pk_users PRIMARY KEY (user_id)
);


-- CUSTOMER
CREATE TABLE customer
(
    customer_id  BIGINT      NOT NULL,
    first_name   VARCHAR(20) NOT NULL,
    last_name    VARCHAR(20),
    birth_date   date,
    email        VARCHAR(50),
    phone_number VARCHAR(9)  NOT NULL,
    user_id      BIGINT,
    CONSTRAINT pk_customer PRIMARY KEY (customer_id)
);

ALTER TABLE customer
    ADD CONSTRAINT uc_customer_email UNIQUE (email);

ALTER TABLE customer
    ADD CONSTRAINT uc_customer_phone_number UNIQUE (phone_number);

ALTER TABLE customer
    ADD CONSTRAINT FK_CUSTOMER_ON_USER FOREIGN KEY (user_id) REFERENCES users (user_id);


-- SALE
CREATE TABLE sale
(
    sale_id     BIGINT                      NOT NULL,
    date_time   TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    cost        DOUBLE PRECISION            NOT NULL,
    confirmed   BOOLEAN DEFAULT FALSE       NOT NULL,
    customer_id BIGINT,
    CONSTRAINT pk_sale PRIMARY KEY (sale_id)
);

ALTER TABLE sale
    ADD CONSTRAINT FK_SALE_ON_CUSTOMER FOREIGN KEY (customer_id) REFERENCES customer (customer_id);




-- CART
CREATE TABLE cart
(
    cart_id BIGINT  NOT NULL,
    amount  INTEGER NOT NULL,
    sale_id BIGINT  NOT NULL,
    book_id BIGINT  NOT NULL,
    CONSTRAINT pk_cart PRIMARY KEY (cart_id)
);

ALTER TABLE cart
    ADD CONSTRAINT FK_CART_ON_BOOK FOREIGN KEY (book_id) REFERENCES book (book_id);

ALTER TABLE cart
    ADD CONSTRAINT FK_CART_ON_SALE FOREIGN KEY (sale_id) REFERENCES sale (sale_id);




-- Inserts
INSERT INTO author (author_id, first_name, last_name)
VALUES (1, 'Ayn', 'Rand'),
       (2, 'Daniel', 'Kiz'),
       (3, 'Mihail', 'Labkovski');

INSERT INTO genre (genre_id, genre_name)
VALUES (1, 'Novel'),
       (2, 'Psychological realism'),
       (3, 'Philosophical novel'),
       (4, 'Tale');

INSERT INTO literature (literature_id, title, author_id)
VALUES (1, 'Fountainhead', 1),
       (2, 'Flowers for Algernon', 2),
       (3, 'Хочу и буду', 3);

INSERT INTO literature_genre (literature_id, genre_id)
VALUES (1, 1),
       (1, 2),
       (1, 3),
       (2, 1),
       (2, 4);

INSERT INTO publisher (publisher_id, publisher_name)
VALUES (1, 'PocketBook'),
       (2, 'AmazonShop'),
       (3, 'Librarius'),
       (4, 'HelloBook'),
       (5, 'WhateverYouWant');

INSERT INTO book (book_id, title, amount, price, publisher_id, image_path)
VALUES (1, 'Fountainhead', 200, 22.05, 5, 'https://m.media-amazon.com/images/I/510VwbbHZkL._AC_SY780_.jpg'),
       (2, 'Flowers for Algernon', 1500, 33.21, 2, 'https://pictures.abebooks.com/isbn/9780156030083-uk.jpg');

INSERT INTO literature_book (literature_id, book_id)
VALUES (1, 1),
       (2, 2);

INSERT INTO customer (customer_id, email, first_name, last_name, phone_number)
VALUES (1, 'roma.tcheloweck@gmail.com', 'Roman', 'Rudi', '060147036');


